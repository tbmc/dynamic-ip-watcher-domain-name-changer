stages:
  - build
  - lint
  - test
  - deploy

image: python:3.8-alpine
# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - apk add gcc musl-dev
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt

python-linting-mypy:
  stage: lint
  script:
    - mypy .

python-linting:
  stage: lint
  script:
    - black --check . --exclude venv/

python-test:
  stage: test
  script:
    - python -m unittest discover

docker-build:
    # Official docker image.
    image: docker:latest
    stage: deploy
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    script:
        - docker build --pull -t "$CI_REGISTRY_IMAGE" .
        - docker push "$CI_REGISTRY_IMAGE"
    only:
        - master

